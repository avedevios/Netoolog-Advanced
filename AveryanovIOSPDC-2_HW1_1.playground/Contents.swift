import UIKit

//Абстракция
//1
//Абстракция - это выделение общих для всех объектов свойств и использование их в дочерних элементах
//Например лягушачьи должны квакать и прыгать, описать это можно с помощью протокола
//Пример кода
 
protocol Frogable {
    func kva() {}
    func jump() {}
}

class Frog: Frogable {
    
}

//2
//Любой программист должен уметь писать код и искать инфо в интернете, это можно выделить в отдельный протокол, сделав абстракцию "Программист"

//-----------------

//Инкапсуляция
//1
//Свойство серия и номер паспорта можно менять только внутри класса "Личность", мы инкапсулируем эти свойства и не позволяем получать их вне класса
//А чтобы их все-таки получить, добавим метод класса, который сможет менять эти свойства
//Пример кода
class person {
    private var passport: String
    
    func getPassport() -> String {
        return self.passport
    }
}

let me = person()
me.getPassport()

//2
//Также инкапсулировать можно методы, напр. установка подшипника подразумевает его смазку. Но извне эта информация не нужна. Извне достаточно метода установки, а внутри класса уже дополнительно сделать приватный метод смазки

//-----------------

//Наследование
//1
//ЖК и плазменные телевизоры наследуют свойства и методы класса Телевизор
//2
//Львы и домашние кошки наследуюд свойства класса Кошачьи
//Пример кода

class Cats {
    var size: Int
    var power: Int
}

class Lion: Cats {
    var sizeOfPride: Int
}

class HomeCat: Cats {
    
}

//-----------------

//Полиморфизм
//1
//В подклассе можно переопределять методы, то-есть родительский класс может иметь разные формы, напр, класс "Световой меч", метод "Светиться"
//У джедая цвет по умолчанию синий, а у ситха меняется на красный
//Пример кода

class LightSaber {
    func light() {
        print("Light blue")
    }
}

class SithLightSaber: LightSaber {
    override func light() {
        print("Light red")
    }
}

//2
//Класс "Потребитель воды", метод "Получить воду из крана". Подкласс "Увлажнитель воздуха", переопределяем метод в "Получить дистилированную воду"
